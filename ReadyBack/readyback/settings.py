"""
Django settings for readyback project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'readymade-devstage-==$c*rl01(#n^ry*@$%4wqy68e4v!o!!z@$%1vk31tcf-%*i=!'

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = ['*']
CORS_ALLOW_ALL_ORIGINS = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'dj_rest_auth.registration',

    'phonenumber_field',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.linkedin',

    'corsheaders',

    'User.apps.UserConfig',
    'Job.apps.JobConfig',
    'Payment.apps.PaymentConfig',
    'Proposal.apps.ProposalConfig',
    'Message.apps.MessageConfig',
    'Contract.apps.ContractConfig',

    'django_drf_filepond',
    "sslserver",
]

SITE_ID = 1

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'readyback.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'ReadyFront', 'build'),
            os.path.join(BASE_DIR, 'User/templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'readyback.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': os.environ.get('POSTGRES_HOST'),
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'PORT': os.environ.get('POSTGRES_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60
CELERY_IGNORE_RESULT = True
CELERY_BROKER_URL = os.environ.get('CELERY_URL')
CELERYD_HIJACK_ROOT_LOGGER = False
REDIS_CHANNEL_URL = os.environ.get('REDIS_CHANNEL_URL')

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

#STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'static'

#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'ReadyFront', 'build', 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}

AUTH_USER_MODEL='User.User'

AUTHENTICATION_BACKENDS=[
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

REST_AUTH = {
    'SESSION_LOGIN': True,
    'USE_JWT': True,
    'JWT_AUTH_COOKIE': 'readymade',
    'JWT_AUTH_REFRESH_COOKIE': 'readymade-refresh-token',
    'JWT_AUTH_HTTPONLY': False,
}

SIMPLE_JWT = {

    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=200),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),

    'SLIDING_TOKEN_LIFETIME': datetime.timedelta(minutes=200),
    'SLIDING_TOKEN_REFRESH_LIFETIME': datetime.timedelta(days=1),
}

EMAIL_BACKEND                           = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST                              = 'mail.arkanpro.com'
EMAIL_USE_TLS                           = True
EMAIL_PORT                              = 587
EMAIL_HOST_USER                         = 'milos@arkanpro.com'
EMAIL_HOST_PASSWORD                     = '5{HngSNh,qVH'
DEFAULT_FROM_EMAIL                      = 'milos@arkanpro.com'

ACCOUNT_LOGOUT_REDIRECT_URL             ='/accounts/login/' 
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS  = 1
ACCOUNT_EMAIL_REQUIRED                  = True
ACCOUNT_EMAIL_VERIFICATION              = "none"
ACCOUNT_LOGIN_ATTEMPTS_LIMIT            = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT          = 86400
ACCOUNT_CONFIRM_EMAIL_ON_GET            = True
ACCOUNT_AUTHENTICATION_METHOD           = 'email'
ACCOUNT_USERNAME_REQUIRED               = False
ACCOUNT_EMAIL_CONFIRMATION_HMAC         = False

TOKEN_EXPIRE_MINUTES = 300
TOKEN_LENGTH = 6

TWILIO_ACCOUNT_SID = os.environ.get('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = os.environ.get('TWILIO_AUTH_TOKEN')
TWILIO_PHONE_NUMBER = os.environ.get('TWILIO_PHONE_NUMBER')

ACCOUNT_ADAPTER = 'User.adapter.DefaultAccountAdapter'
if not os.environ.get('DEBUG'):
    #URL_FRONT = 'http://18.185.108.243:3000/'
    URL_FRONT = 'https://www.readymademe.com/'
else:
    URL_FRONT = 'https://www.readymademe.com/'

DJANGO_DRF_FILEPOND_STORAGES_BACKEND = 'storages.backends.s3boto3.S3Boto3Storage'
DJANGO_DRF_FILEPOND_UPLOAD_TMP = os.path.join(BASE_DIR, 'static/temp_uploads')
AWS_STORAGE_BUCKET_NAME = 'readymades3'
AWS_S3_REGION_NAME = 'eu-central-1'
#AWS_S3_ENDPOINT_URL = 'https://s3.eu-central-1.amazonaws.com'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.eu-central-1.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_AUTO_CREATE_BUCKET = True
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_LOCATION = 'static'

#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, 'readymade/static'),
#]
STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)

if not os.environ.get('DEBUG'):
    SECRET_KEY = "sk_test_dqSpsxCvyfzb6YAPBSrQW1J64TFAqoPUPtGh8NNU"
else:
    SECRET_KEY = "sk_test_dqSpsxCvyfzb6YAPBSrQW1J64TFAqoPUPtGh8NNU"
