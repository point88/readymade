version: '3'

services:

  #mongo:
  #  image: mongo
  #  container_name: mongo
  #  restart: always
  #  env_file: .env
  #  environment: 
  #    - MONGO_INITDB_ROOT_USERNAME=${MONGO_DB_USERNAME}
  #    - MONGO_INITDB_ROOT_PASSWORD=${MONGO_DB_PASSWORD}
  #    - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
  #    - MONGO_INITDB_USERNAME=${MONGO_DB_USERNAME}
  #    - MONGO_INITDB_PASSWORD=${MONGO_DB_PASSWORD}
  #  volumes:
  #    - ${PWD}/_data/mongo:/data/db
  #    - ${PWD}/docker/_mongo/fixtures:/import
  #    - ${PWD}/docker/_mongo/scripts/init.sh:/docker-entrypoint-initdb.d/setup.sh

  postgres:
    container_name: postgres
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - /var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis
    restart: always
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - /var/lib/redis

  app:
    build: .
    image: app:latest
    container_name: app
    restart: always
    command: >
        sh -c "python manage.py makemigrations User Contract Job Message Payment Proposal &&
               python manage.py migrate &&
               #python manage.py createsuperuser --noinput --username readyadmin --email ferreol@arkanpro.com&&
               #python manage.py djstripe_sync_models&&
               python manage.py runserver_plus 0.0.0.0:8000 --cert-file cert.pem --key-file key.pem"
    env_file: .env

    ports:
      - 8000:8000
    depends_on:
      #- mongo
      - redis
      - postgres

  celery:
    build: .
    image: app:latest
    container_name: celery
    restart: always
    command: [
      "celery",
      "-A",
      "readyback",
      "worker",
      "-c",
      "1",
      "-l",
      "INFO",
      "--without-heartbeat",
      "--without-gossip",
      "--without-mingle",
    ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=readyback.settings
      - DJANGO_WSGI=readyback.wsgi

    depends_on:
      - postgres
      #- mongo
      - redis

networks:
  default: