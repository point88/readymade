version: '3'

services:
  postgres:
    container_name: postgres
    restart: always
    env_file: .env
    networks:
      - database_network
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - database_volume:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis
    restart: always
    env_file: .env
    command: redis-server --requirepass $REDIS_PASSWORD
    ports:
      - 6379:6379
    volumes:
      - /var/lib/redis
    networks:
      - redis_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: always
    command: >
        sh -c "python manage.py makemigrations User Contract Job Message Payment Proposal &&
               python manage.py migrate &&
               #python manage.py createsuperuser --noinput --username readyadmin --email ferreol@arkanpro.com&&
               #python manage.py runserver 0.0.0.0:8000&&
               #gunicorn readyback.wsgi -c gunicorn.cfg.py --reload"
               python manage.py runserver_plus --cert-file cert.pem --key-file key.pem"
    env_file: .env
    ports:
      - 8000:8000
    volumes:
      - ./ReadyBack:/app
    depends_on:
      - redis
      - postgres
    networks:
      - redis_network
      - database_network

  celery:
    build: .
    image: app:latest
    container_name: celery
    restart: always
    command: [
      "celery",
      "-A",
      "readyback",
      "worker",
      "-c",
      "1",
      "-l",
      "INFO",
      "--without-heartbeat",
      "--without-gossip",
      "--without-mingle",
    ]
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=readyback.settings
      - DJANGO_WSGI=readyback.wsgi

    depends_on:
      - postgres
      - redis
    networks:
      - redis_network
      - database_network

volumes:
  database_volume:

networks:
  database_network:
  redis_network:
